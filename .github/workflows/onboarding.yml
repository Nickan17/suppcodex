name: Onboarding CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Set up Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: 2.30.4

      - run: supabase --version

      - name: Authenticate Supabase CLI
        run: supabase login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Create .env.local from .env.example
        run: |
          sed -e 's|SUPABASE_URL=.*|SUPABASE_URL=http://localhost:54321|' \
              -e 's|SUPABASE_ANON_KEY=.*|SUPABASE_ANON_KEY=dummy_anon_key|' \
              -e 's|SUPABASE_SERVICE_ROLE_KEY=.*|SUPABASE_SERVICE_ROLE_KEY=dummy_service_role_key|' \
              -e 's|SUPABASE_JWT_SECRET=.*|SUPABASE_JWT_SECRET=dummy_jwt_secret|' \
              .env.example > .env.local

      - name: Install ESLint
        run: npm install --save-dev eslint eslint-config-expo

      - name: Run Lint
        run: npm run lint

      - name: Show Supabase CLI version
        run: supabase --version

      - name: Verify Deploy Script
        run: npm run deploy:dev

      - name: Verify JWT Generation Script
        run: node gen_service_jwt.js "dummy" 1

      - name: Verify Test Script Exists
        run: node -e "require('fs').accessSync('test_full_score.ps1')"

  deploy-staging:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    # expose secrets as env vars once
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      STAGING_PROJECT_REF:  ${{ secrets.STAGING_PROJECT_REF }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: supabase/setup-cli@v1
        with:
          version: 2.30.4

      - name: Show Supabase CLI version
        run: supabase --version

      - name: Authenticate Supabase CLI
        run: supabase login   # SUPABASE_ACCESS_TOKEN is already in env

      - name: Deploy to Staging
        run: |
          set -e                              # fail fast on first error
          for fn in full-score-from-upc firecrawl-extract resolve-upc score-supplement
          do
            echo "Deploying $fn â€¦"
            supabase functions deploy "$fn" --no-verify-jwt --project-ref "$STAGING_PROJECT_REF"
          done